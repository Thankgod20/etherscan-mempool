"use client";
import React, { useState, useEffect } from "react";
import { Card } from "@/components/ui/card";
import axios from "axios";
import { useParams } from "next/navigation";
import {
  Table,
  TableBody,
  TableCaption,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";

interface Transaction {
  hash: string;
  value: string;
  from: string;
  to: string;
  gas: string;
}

const Dashboard: React.FC = () => {
  const { address }: { address: string } = useParams();
  console.log(" Address", address)
  const [balance, setBalance] = useState<number | null>(null);
  const [transactions, setTransactions] = useState<Transaction[] | null>(null);

  const etherscanAPIKey = "11T9KQ5CKNTIJP92D7BIUJNNSS6WS9C823";
  const sepoliaAPI = "https://api-sepolia.etherscan.io/api";

  useEffect(() => {
    const fetchBalanceAndTransactions = async () => {
      try {
        if (address) {
          // Fetch balance
          const balanceResponse = await axios.get(
            `${sepoliaAPI}?module=account&action=balance&address=${address}&tag=latest&apikey=${etherscanAPIKey}`
          );
          setBalance(Number(balanceResponse.data.result));

          // Fetch transactions
          const transactionsResponse = await axios.get(
            `${sepoliaAPI}?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&sort=asc&apikey=${etherscanAPIKey}`
          );
          setTransactions(transactionsResponse.data.result);
        }
      } catch (error) {
        console.error("Error fetching data:", error);
      }
    };

    fetchBalanceAndTransactions();
  }, [address, etherscanAPIKey, sepoliaAPI]);

  const weiToEther = (valueInWei: string): string => {
    return (Number(valueInWei) / 1e18).toFixed(5);
  };

  const weiToGwei = (valueInWei: string): string => {
    return (Number(valueInWei) / 1e9).toFixed(6);
  };

  return (
    <div className="mt-12 relative min-h-[70vh] w-11/12 lg:w-2/3 mx-auto space-y-8">
      <h1 className="opacity-20 text-7xl font-bold text-center absolute -rotate-45 top-1/2 translate-x-1/2">
        Dashboard is only <br />
        Applicable in <br />
        Sepolia Testnet
      </h1>
      <h1 className="text-3xl font-bold text-center">Dashboard</h1>
      <Card className="space-y-8">
        <p>
          <span className="text-lg font-semibold">Address {"  "}</span>
          <span className="text-blue-500">{address}</span>
        </p>
        <p>Balance: {balance !== null ? balance : "Loading..."}</p>
        <div>
          <h2 className="text-xl border-b">Transactions</h2>
          {transactions && transactions.length > 0 ? (
            <Table className="border-b">
              <TableCaption>list of your transaction.</TableCaption>

              <TableHeader className="bg-foreground/10 rounded-lg">
                <TableRow>
                  <TableHead>Transaction Hash</TableHead>
                  <TableHead>From</TableHead>
                  <TableHead>To</TableHead>
                  <TableHead>Value (ETH)</TableHead>
                  <TableHead>Gas</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {transactions.map((transaction: Transaction) => (
                  <TableRow key={transaction.hash}>
                    <TableCell>
                      {transaction.hash
                        ? `${transaction.hash.substring(0, 16)}...`
                        : "Loading..."}
                    </TableCell>
                    <TableCell>
                      {transaction.from
                        ? `${transaction.from.substring(0, 16)}...`
                        : "Loading..."}
                    </TableCell>
                    <TableCell>
                      {transaction.to
                        ? `${transaction.to.substring(0, 16)}...`
                        : "Loading..."}
                    </TableCell>
                    <TableCell>{weiToEther(transaction.value)}</TableCell>
                    <TableCell>{weiToGwei(transaction.gas)}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          ) : (
            <p>No transactions available</p>
          )}
        </div>
      </Card>
    </div>
  );
};

export default Dashboard;
